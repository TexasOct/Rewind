export const en = {
  common: {
    save: 'Save',
    cancel: 'Cancel',
    confirm: 'Confirm',
    delete: 'Delete',
    edit: 'Edit',
    add: 'Add',
    search: 'Search',
    filter: 'Filter',
    reset: 'Reset',
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    warning: 'Warning',
    info: 'Info',
    collapse: 'Collapse',
    expand: 'Expand',
    expandAll: 'Expand All',
    collapseAll: 'Collapse All',
    language: 'Language',
    toggleLanguage: 'Toggle language',
    toggleTheme: 'Toggle theme',
  },
  menu: {
    dashboard: 'Dashboard',
    activity: 'Activity',
    agents: 'Agents',
    settings: 'Settings',
  },
  auth: {
    login: 'Login',
    logout: 'Logout',
    username: 'Username',
    password: 'Password',
    rememberMe: 'Remember me',
    forgotPassword: 'Forgot password?',
    loginSuccess: 'Login successful',
    loginFailed: 'Login failed',
    loginTitle: 'Login to your account',
    loginDescription: 'Enter your email below to login to your account',
    email: 'Email',
    emailPlaceholder: 'm@example.com',
    orContinueWith: 'Or continue with',
    loginWithGitHub: 'Login with GitHub',
    noAccount: "Don't have an account?",
    signup: 'Sign up',
  },
  dashboard: {
    title: 'Dashboard',
    overview: 'Overview',
    statistics: 'Statistics',
    recentActivities: 'Recent Activities',
    totalEvents: 'Total Events',
    activeTime: 'Active Time',
    productivity: 'Productivity',
    loadingMetrics: 'Loading metrics...',
    panelTitle: 'Statistics Panel',
    description: 'View Token usage and Agent task statistics',
    comingSoon: 'Statistics feature coming soon',
    currentPeriod: 'Current period: ',
  },
  activity: {
    title: 'Activity Timeline',
    timeline: 'Timeline',
    details: 'Details',
    filter: 'Filter',
    dateRange: 'Date Range',
    eventType: 'Event Type',
    noData: 'No activity data',
    keyboard: 'Keyboard',
    mouse: 'Mouse',
    screenshot: 'Screenshot',
    loadingData: 'Loading activity records...',
    pageTitle: 'Activity Timeline',
    description: 'View and review your historical activities',
    noDataDescription: 'The system will automatically record your activities. Check back later',
    activitiesCount: ' activities',
    eventSummariesCount: ' event summaries',
    eventsCount: ' events',
    recordsCount: ' raw records',
  },
  agents: {
    title: 'Agents',
    tasks: 'Tasks',
    createTask: 'Create Task',
    taskName: 'Task Name',
    taskDescription: 'Task Description',
    taskStatus: 'Status',
    taskPriority: 'Priority',
    status: {
      todo: 'To Do',
      doing: 'In Progress',
      done: 'Done',
      cancelled: 'Cancelled',
    },
    priority: {
      low: 'Low',
      medium: 'Medium',
      high: 'High',
    },
    loadingTasks: 'Loading task list...',
    pageTitle: 'Agents Assistant',
    description: 'Create and manage AI Agent tasks',
    execute: 'Execute',
    noTodoTasks: 'No to-do tasks',
    createTaskHint: 'Click the top right to create a new task',
    noProcessingTasks: 'No tasks in progress',
    noDoneTasks: 'No completed tasks',
    createNewTask: 'Create New Task',
    createTaskDescription: 'Select an Agent and describe the task plan you want to complete',
    selectAgent: 'Select Agent',
    selectAgentPlaceholder: 'Please select an Agent',
    taskDescriptionPlaceholder: 'Please describe in detail the task you want Agent to complete...',
    taskDescriptionTip: 'Tip: The more detailed the description, the better the Agent execution results',
    creating: 'Creating...',
  },
  settings: {
    title: 'Settings',
    general: 'General',
    language: 'Language',
    theme: 'Theme',
    llm: 'LLM Configuration',
    apiKey: 'API Key',
    model: 'Model',
    baseUrl: 'Base URL',
    temperature: 'Temperature',
    maxTokens: 'Max Tokens',
    saveSettings: 'Save Settings',
    settingsSaved: 'Settings saved successfully',
    description: 'Configure application parameters and preferences',
    generalDescription: 'Language and region settings',
    llmDescription: 'Configure Large Language Model API parameters',
    appearance: 'Appearance',
    appearanceDescription: 'Customize application appearance',
  },
  theme: {
    light: 'Light',
    dark: 'Dark',
    system: 'System',
  },
} as const

// 辅助类型：递归地将深度嵌套的字面量类型转换为结构类型
type DeepStringify<T> = T extends string
  ? string
  : {
      [K in keyof T]: T[K] extends Record<string, any>
        ? DeepStringify<T[K]>
        : string
    }

export type Translation = DeepStringify<typeof en>
